---
- name: "[NC-Backup] - Backup folder exists."
  file: path="{{ nextcloud_backup_dir }}" state=directory

- name: "[NC-Backup] - Backup Mysql/MariaDb database."
  command: >
    mysqldump --lock-tables
    -h {{nextcloud_db_host}}
    -u {{nextcloud_db_admin}}
    -p{{nextcloud_db_pwd}}
    {{nextcloud_db_name}} -r {{nextcloud_backup_db}}
  args:
    creates: "{{nextcloud_backup_db}}"
  when: nextcloud_db_backend in ["mysql", "mariadb"] and nextcloud_db_backup

- name: "[NC-Backup] - Backup PostgreSQL database"
  shell: >
    PGPASSWORD="{{nextcloud_db_pwd}}"
    pg_dump {{nextcloud_db_name}}
    -h {{nextcloud_db_host}}
    -U {{nextcloud_db_admin}}
    -f {{nextcloud_backup_db}}
  args:
    creates: "{{nextcloud_backup_db}}"
  when: nextcloud_db_backend == "pgsql" and nextcloud_db_backup

- name: "[NC-Backup] - Backup config.php"
  command: "cp {{nextcloud_webroot}}/config/config.php {{nextcloud_backup_config}}"
  args:
    creates: "{{nextcloud_backup_config}}"

- name: "[NC-Backup] - Verify backup."
  stat: path="{{item}}"
  register: nc_backup_confsize
  failed_when: nc_backup_confsize.stat.size is undefined or nc_backup_confsize.stat.size <= 10
  with_items:
    - "{{nextcloud_backup_db}}"
    - "{{nextcloud_backup_config}}"
  when: item != "{{nextcloud_backup_db}}" or nextcloud_db_backup

  # backup data folder only if in a sub-directory of nextcloud_webroot
- name: "[NC-Backup] - Backup data folder"
  command: "cp -r {{nextcloud_data_dir}} {{nextcloud_backup_data}}"
  when: "'{{nextcloud_webroot}}' in '{{nextcloud_data_dir}}'"
